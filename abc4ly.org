* Feuille de route
** P0
Alternatives
	+enchaînement: repeat w/alternatives + repeat+
	alternative de plus de n mesure:
		+2 mesures+
		3 mesures
		avec forme ":| [2" sur 2 et 3 mesures
	alternative au milieu d'une mesure
	alternative pas fermée (manque une barre simple) en fin de morceau
	seconde alternative plus courte que la première
	":|2" && ! alternative == 1 => syntax error

Corriger les .ly du tunebook qui ne compilent pas:
	cailleach_reel
	dublin_reel
	kitty_lie_over
	les_ridees_de_lanvaudan
	reel_amix
	road_to_thales
	the_tinkerman_s_wife
	toss_the_feathers
	the_flight_of_the_butterfly
	the_goat_island_reel
	the_woods_of_the_old_limerick


	kalyana: pagaille dans les alternatives à cause d'une barre à la
        ligne et d'un enchainement d'alternatives

	bill_harte_s:
		alternative de 2 mesures
		barre de mesure à la ligne pour fermer une (autre) alternative 

	cailleach_reel:
		alternative de plus de 1 mesure qui démarre au milieu d'une mesure

	father_o_flynn: pagaille dans les alternatives

	kitty_lie_over: idem kalyana

	les_ridess_de_lanvaudan: alternatives

	reel_amix: alternatives

	road_to_thales, the_boys_of_malin, 

	the_tinkerman_s_wife
		blocs de répétition pas identés
		manque un espace avant les triolets
		compile pas

	toss_the_feathers: alternative pas fermée en fin de morceau
        (manque une barre de mesure qui pourrait être ajoutée
        automatiquement par abc4ly... ou pas) => erreur abc4ly ou
        fermeture de l'alternative.

	the_flight_of_the_butterfly: alternatives

	the_goat_island_reel: alternatives

	the_woods_of_the_old_limerick: alternatives

Corriger les .ly du tunebook qui ont des avertissements:
	air_moving (prb bar check, prb formation alternative)

Rythmes brisés:
	+>: dotted / half (e.g. "a>b")+
	Erreur: rythme brisé incomplet (e.g. "a>b>c")
	<: half / dotted
	>> et <<
	>>> et <<<

Triolets: 3 notes dans la durée de 2 notes
	+3 notes de même durée+
	+Idem avec un silence parmi les 3 notes+
	2 notes (dont une deux fois plus longue)
	4 notes (dont deux deux fois plus courtes)
	Généralisation: somme des durées = durée de 2 notes

	Changement d'accord sur la première note d'un triolet marqué
        après le symbole "début de triolet"

Alternatives:
	+Deux alternatives, une mesure par alternative+
	Deux (et plus) mesures par alternatives
	Alternatives au milieu d'une mesure
	Forme "|[1" etc.
		+Forme ":| |2"_+

Ties: Notes liées "-"
	+Dans une mesure ou entre deux mesures.+
	+Les deux notes liées doivent avoir la même hauteur+
	Notes source et destination pas sur la même ligne ABC

Barres doubes (suite):
		[| thick-thin double bar line => \bar ".|"
		Barre double au milieu d'une alternative

Traiter la durée des notes:
	+Calculer la durée des notes par défaut (default note length)+
	Gérer le champ informatif "default note length" (L:) qui permet de changer la durée des notes par défaut:
		Dans l'entête
		A l'improviste dans le morceau
	+Pas de modificateur (durée de base)+
	+Modificateur multiple de 2 => durée simple+
	Modificateur de durée pas multiple de 2 => durée composée:
		+Note pointée+
		Note liée
	Gérer le coefficient diviseur => diminuer la durée par défaut
		+_"A/" synonyme de "A/2"_+
		+_"A/2", "A/4", ..., "A/2^n"_+
		+Erreur si le coef est différent de 2^n+
		Est-ce que ces coeff peuvent ne pas être de la forme 2^n?
	Gérer les marqueurs de rythme brisé (broken rythms markers: a>b, etc.)
	Gérer les triolets de croche. Exemple en 4/4: "(3 abc"
	Gérer les n-uplets (avec n variant de 2 à 9)

Gérer les alterations liées à la tonalité du morceau
	+mi mineur+
	+ré majeur+
	+toutes les tonalités avec des dièses+
	+toutes les tonalités avec des bémols+
	est-ce que "Do bémol majeur" est une gamme valide?
	get_relative_major_scale: tester tous les modes de toutes les gammes

Répétitions et barres de mesures:
	+_"|: notes :|"_+
	+_"|: notes | autres notes :|"_+
        "|: notes :| + |: autres notes :|" (syntaxe valide?)
	notes + |: autres notes :|
	"|: notes :: autres notes :|"
	" notes :|" (début de répétition implicite au début du morceau)
	"| notes | autres notes |"
	erreur: répétition pas refermée
	erreur(?): répétitions impriquées

Reconnaître la structure du morceau (barres de mesure, répétitions, ...):
	+Séparateur de mesures+

En cas d'erreur de syntaxe ABC, donner du contexte à l'utilisateur
	+nom du fichier+
	+numéro de la ligne+
	+colonne en cours d'analyse+
	+description de l'erreur+
	+erreur: not a pitch+
	+erreur: "c," invalid construct+
	+erreur: "C'" invalid construct+

Style:
	Dans le ly, faire apparaître les groupements de notes du ABC: e.g
        notes groupées => 1 espace, notes séparées => 4 espaces.

Ligne de commande:
	Pouvoir invoquer abc4ly depuis la ligne de commande (même
        comportement que abc2ly)
		Sans option (juste un fichier abc)
		+Avec option -o+

Bar check:
	Est-ce qu'il faut les préciser explicitement:
	- à la fin du morceau?
	- avec les répétitions?
	- avec les alternatives?
	ou est-ce que lilypond fait le test?
	Est-ce qu'une barre spéciale e.g. \bar "||" est utilisée pour le
        bar-checking, ou est-ce qu'il faut ajouter un bar check en plus?

Divers:
	Donner du contexte à toutes les exceptions AbcSyntaxError

	Vérifier la présence d'une "time signature" valide au moment de
        commencer à faire du translate_notes() plutôt que implicitement
        dans write_time_signature()

** P1
Reconnaître le champ tempo

Vérifier que les champs informatifs réservés à l'entête ne se retrouvent
pas ailleurs dans le morceau.

Accords de guitare
	(2) Utilisation de chordmode

Translation de la tonalité du morceau "Partie 2": "K:..." => "\key ..."
	Highland bagpipe keys (HP et Hp)
	Global accidentals

Notation des modes? Dans abc.txt, exemple Dmix = f# + c# + gnat. Est-ce
que ça se retrouve dans la musique écrite?

Beaming: notes groupées sans espace

** Done
Ouvrir le fichier abc
Reconnaître le champ informatif "titre" (T)

Un morceau peut avoir plusieurs titres qui peuvent même apparaître au
milieu des notes. Le titre du morceau pour lilypond sera le premier
champ titre rencontré.

Reconnaître le champ informatif "compositeur" (C)
Reconnaître le champ informatif "rythme" (R)

Ignorer les champs informatif valides non gérés: "any line beginning
with a letter in the range A-Z and immediately followed by a : is
interpreted as a field".

Ignorer les commentaires
Ignorer les lignes vides

Vérifier que pas de problème d'analyse quand le fichier ne termine pas
par une ligne vide.

Générer l'entête du fichier lilypond:
    numéro de version
    titre
    auteur
    générer le MIDI par défaut (permet de vérifier la conversion à l'oreille)

Extraire et faire apparaître dans l'entête "meter" le type de morceau (jig
reel, ...) si il est donné dans le .abc
    R:<not empty> => meter
    R: absent => not meter
    R:<empty> => not meter

Reconnaître le champ "signature rythmique" ou "mesure" (meter):
	C = 4/4 = common time
	C| = 2/2 = cut time
	Fraction (4/4, 6/8, ...) = entier  + "/" + entier
	Des espaces dans la fraction (OK)
	Erreur fatale si le champ est absent (exception "abc syntax error")
	Erreur fatale si le champ est incorrect (exception "abc syntax error")

Translation de la tonalité du morceau "Partie 1": "K:..." => "\key ..."
	K:C => \key c \major
	K:s => AbcSyntaxError
	K: => AbcSyntaxError
	K:Bb => \key bes
	K:F# => \key fis
	K:Am => \key a \minor
	K:G minor => \key g \minor
	K:Eb minor => \key ees \minor
	K:D mixolydian => \key d \mixolydian
	K:DMix
	K:Dmix
	les 7 modes

Reconnaître la hauteur des notes:
	Majuscules / minuscules / apostrophe / virgule
	Altérations 1: dièse, bémol, naturel
	Altérations 2: double dièse, double bémol
	Silences (rests)

Accords de guitare
	(1) Simple quoted text indications (idem abc2ly)
		Cas nominal
		Erreur: guillemets non fermés sur la ligne dans le .abc
		conver() + chords

Morceau:
	c_major
	hello_world & friends
	hello_repeated
	brid_harper_s (jig, mi mineur, répétition simple)
		informations de contexte avec AbcSyntaxError: nom du
        fichier, numéro de ligne, contenu de la ligne, position de
        l'erreur (^), raison de l'erreur
		répétition |: ... :|
	        altération: Em => fa dièse
		noire pointée (E3 => e'4.)
	yellow_tinker
		doubles croches
		altération non diatonique

Test suite:
	Ecrire un Makefile qui passe à la moulinette abc4ly tous mes .abc

	Enrichir le Makefile pour que quand les conversions abc4ly
        fonctionnent, les .ly soient compilés avec lilypond.

Gérer une mesure à cheval sur 2 lignes ABC
	barre de mesure à la ligne (e.g. brian_o_lynn)
	continuation de la mesure à la ligne
	dernière barre de mesure manquante

** Wontdo

* But du jeu
Avoir un abc2ly qui marche pour tous les .abc du tunebook.

Prendre en main la méthode TDD.

Améliorer ma maîtrise de Python. Code compatible Python 2.6 et Python 3.

* Les grands principes
abc2ly doit toujours générer du code lilypond valide.

abc2ly doit générer du code qui correspond musicalement à ce que
l'utilisateur a spécifié dans le .abc.

Mais abc2ly n'est pas un vérificateur de la bonne syntaxe des fichiers
.abc (sorte de lint pour du abc): une certaine tolérance aux erreurs de
saisie du .abc est possible, à condition que le code lilypond généré
soit valide.

Idée: quand un problème est détecté:
- si il génèrerait du code lilypond qui ne compile pas: erreur
- si il génère du code qui compile (même si il implique que la sortie
  papier n'est sans doute pas ce que voulait l'utilisateur): warning
Un mode strict permettrait de traiter les warning comme des erreurs.

C'est une idée. En ce qui me concerne: je veux que si le code généré
n'est peut être pas ce que je voulais en écrivant le .abc, je veux une
erreur.

* Stratégie
Ré-écrire abc2ly en Python en utilisant la méthode TDD et en se
focalisant sur les spécifications "abc.txt". Python 2.6 compatible
Python 3 partout où c'est possible.

En parallèle écrire un jeu de tests de régressions. S'inspirer du (et à
terme, s'intégrer dans le) système de tests de régressions de lilypond
("make test-baseline").

* Principe des tests
Tests unitaires: utilisation du module unittest de Python (clone de
JUnit, l'environnement de test utilisé pour illustrer TDD).

Tests fonctionnels: pour chaque test de la base, comparaison automatique
de la sortie de abc2ly (.ly) avec un fichier .ly de référence. Pour
valider les .ly de référence: la première fois, comparer le fichier .abc
avec le résultat graphique de lilypond (e.g. page web qui met en vis à
vis le code abc et la partition). Les fois suivantes, comparer la
nouvelle partition (abc=>ly=>png) à la partition de référence.

En résumé, 3 outils:
  - abc2ly-test-ref (abc_vs_png) => génération de snippets de référence
    (.ly et .png) et d'une page web
  - abc2ly-test
    => génération de nouveaux snippets .ly
    => comparaison texte de ces snippets avec les snippets de
    référence. Création d'un rapport.
    => génération de nouveaux snippets .png (et log des erreurs)
    => génération d'une page web qui met les snippets .png en relation
    avec les snippets de référence en faisant apparaître les différences
    idem les tests de régression de lilypond et en affichant les
    statistiques.

* Design de abc4ly.py
Nom du programme: abc4ly.py

Base de l'analyseur: 
- 1 ligne de texte
- type: commentaire (%) ou ligne vide, champ informatif, musique.

Pour chaque ligne de texte:
    - commentaire: on ignore la ligne
    - ligne vide: on ignore la ligne
    - champ informatif: on vérifie la syntaxe, on extrait l'information
      en supprimant les caractères blancs en trop

La hauteur des notes est traduite de manière absolue. On n'utilise pas
le mode "\relative": ce mode facilite l'écriture manuelle mais n'est pas
facile à lire et est plus compliqué à écrire automatiquement.

On utilise les vérificateurs de mesure: permet à lilypond d'informer
l'utilisateur des erreurs d'écriture (quand ce n'est pas fait par abc4ly).

Style de la sortie lilypond (basé sur les guidelines lilypond et sur des
exemples mutopia):
	1 espace entre deux notes (vu dans des exemples sur mutopia)
	Une mesure par ligne de texte
	Identer les accolades (4 espaces)

* Gestion des champs informatifs
On retient les champs informatifs suivants:

Pour l'entête (titre, auteur, type de morceau):

    dans un premier temps:

Field name            header tune elsewhere Used by Examples and notes
==========            ====== ==== ========= ======= ==================
C:composer            yes                           C:Trad.
R:rhythm              yes         yes       index   R:R, R:reel
T:title               second yes                    T:Paddy O'Rafferty

    dans un second temps, pourquoi pas:

Field name            header tune elsewhere Used by Examples and notes
==========            ====== ==== ========= ======= ==================
D:discography         yes                   archive D:Chieftans IV
H:history             yes         yes       archive H:This tune said to ...


Pour la musique:

Field name            header tune elsewhere Used by Examples and notes
==========            ====== ==== ========= ======= ==================
K:key                 last   yes                    K:G, K:Dm, K:AMix
L:default note length yes    yes                    L:1/4, L:1/8
M:meter               yes    yes  yes               M:3/4, M:4/4
Q:tempo               yes    yes                    Q:200, Q:C2=200


Champs ignorés:

Field name            header tune elsewhere Used by Examples and notes
==========            ====== ==== ========= ======= ==================
A:area                yes                           A:Donegal, A:Bampton
B:book                yes         yes       archive B:O'Neills
E:elemskip            yes    yes                    see Line Breaking
F:file name                         yes               see index.tex
G:group               yes         yes       archive G:flute
I:information         yes         yes       playabc
N:notes               yes                           N:see also O'Neills - 234
O:origin              yes         yes       index   O:I, O:Irish, O:English
P:parts               yes    yes                    P:ABAC, P:A, P:B
S:source              yes                           S:collected in Brittany
W:words                      yes                    W:Hey, the dusty miller
X:reference number    first                         X:1, X:2
Z:transcription note  yes                           Z:from photocopy

Les champs spécifiés dans abc.txt mais non traités par myabc2ly sont
ignorés silencieusement. La découverte d'un champ informatif non
spécifié génère l'affichage d'un warning.
* Rappels ABC
Durée des notes par défaut:
	1. Calculer (Evaluer) la signature rythmique qu'on appelera DTS
           (decimal tempo signature).
	   Exemples: dts(3/4) = 0.75; dts(2/2) = 1
	2. Si dts < 0.75: default note length = sixteenth note (double
           croche = 16). Sinon (dts >= 0.75): default note length = eighth
           note (croche = 8)

Accords de guitare: entre guillemets doubles (") avant la note au dessu
de laquelle se produit le changement d'accord.

Barres:
	:|| => pas dans le bestiaire abc.txt => illégal

** Grammaire ABC
Qu'est-ce qu'une note?

note : [ guitar_chord ] | [ accent ] | [ accidental ] pitch \
              [ octaver ] [ lenght_modifier ]

accidental : '^' | '=' | '_' | '^^' |'__'

pitch : [a-gAG]

octaver : "'" | ','

length_modifier : multiplier | divider

multiplier = number

divider = /number

* Rappels lilypond
Altérations: bémol=es (e.g. bes pour sib), dièse=is

Tonalité du morceau:
	Gamme majeure: \key <hauteur> \major (e.g. "\key g \major")
	Gamme mineure: \key <hauteur> \minor (e.g. \key bes \minor) (sib mineur)
	Mode: \key <hauteur> \<mode> (e.g \key d \mixolydian)
	Pour faire plus compliqué: utiliser la propriété "Staff.keySignature"

Pour exprimer la durée des notes en lilypond:
	1 = whole note, 2 = half note (blanche), 4 = quarter note (noire)
	. = note pointée

Exemples réels de musique écrite avec lilypond: http://www.mutopiaproject.org/

Répétition: \repeat volta 2 { ... }

Ecriture des accords "à la abc2ly" en utilisant la syntaxe "simple
quoted text indications": un accord de guitare est (simplement)
représenté avec e.g. ^"Am" après la note où se produit le changement
d'accord. => utilisation

Une note liée (tie) permet d'augmenter la durée d'une note de même
hauteur dans une même mesure ou entre deux mesures. Notation: la
première note est suivie par un tilde "~". Si la note finale n'est pas à
la même hauteur, lilypond 2.13.7 n'émet pas d'avertissement ou d'erreur
mais n'affiche pas de liaison entre les deux notes.

* Equivalence ABC <=> lilypond
** Hauteur des notes

En notation absolue et avec la clé \treble de LilyPond:

| ABC | LilyPond |
|-----+----------|
| C,  | c        |
| C   | c'       |
| c   | c''      |
| c'  | c'''     |

** Durée des notes
